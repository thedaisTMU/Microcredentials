ggsave("Graphs_Exports/Figure_7.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(combined_data_with_seniority, "Graphs_data/Figure_7.csv", row.names = FALSE)
# Common Titles treemap
# treemap(data,
#         index = c("Group", "Common Title"),
#         vSize = "NormalizedProfessionals",
#         title = "Comparison of Common Titles",
#         palette = dais_palette,
#         #fontfamily.title = "Rooneysans",
#         #fontfamily.labels = "Rooneysans",
#         #fontfamily.legend = "Rooneysans",
#         fontsize.labels = 12)
######################################################################
# Fields of Study
# create a new datatable that combines the data from both datatables
data <- rbind(
software_withoutmc_fields_of_study[, .(Group = "Without MC", `Field of Study`, Professionals)],
`software_mc_Fields of Study`[, .(Group = "With MC", `Field of Study` = Fields.of.study, Professionals)]
)
# normalize the Professionals variable within each group
data[, NormalizedProfessionals := ifelse(Group == "With MC", Professionals / sum(software_mc_Locations$Professionals), Professionals / sum(software_withoutmc_location$Professionals))]
# Calculate the differences in professionals between individuals with and without microcredentials for each field of study
data_diff <- data[, .(Difference = diff(NormalizedProfessionals)), by = .(`Field of Study`)]
# Calculate the absolute differences
data_diff[, AbsoluteDifference := abs(Difference)]
# Sort the data in descending order of the absolute difference
data_diff <- data_diff[order(-AbsoluteDifference)]
# Select the top 10 values of the absolute differences
top_10_diff <- head(data_diff, 10)
###
# Sort the data in descending order of the difference
data_diff <- data_diff[order(-Difference)]
# Select the top 10 values where MC is higher
top_10_diff_mc <- head(data_diff, 10)
###
# Sort the data in ascending order of the difference
data_diff <- data_diff[order(Difference)]
# Select the top 10 values where without MC is higher
top_10_diff_withoutmc <- head(data_diff, 10)
###
# Filter data in top_10_diff
filtered_data <- data[`Field of Study` %in% top_10_diff$`Field of Study`]
# Filter data in top_10_diff_mc
filtered_data_mc <- data[`Field of Study` %in% top_10_diff_mc$`Field of Study`]
# Filter data in top_10_diff_withoutmc
filtered_data_withoutmc <- data[`Field of Study` %in% top_10_diff_withoutmc$`Field of Study`]
# ggplot(filtered_data, aes(x = `Field of Study`, y = NormalizedProfessionals, fill = Group)) +
#   geom_bar(stat = "identity", position = "dodge") +
#   labs(x = "Common Skill", y = "Normalized Number of Professionals", title = "Comparison of Professionals with and without MC for top 10 skill differences") +
#   theme(panel.background=element_blank()) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 0.5)) +
#   scale_fill_manual(values = c("#eb0072", "#6bbfae"))
#
# ggplot(filtered_data_mc, aes(x = `Field of Study`, y = NormalizedProfessionals, fill = Group)) +
#   geom_bar(stat = "identity", position = "dodge") +
#   labs(x = "Field of Study", y = "Normalized Number of Professionals", title = "Comparison of Professionals with and without MC for top 10 skill differences") +
#   dais.base.theme() +
#   theme(panel.background=element_blank()) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 0.5)) +
#   scale_fill_manual(values = c("#eb0072", "#6bbfae"))
#
# ggplot(filtered_data_withoutmc, aes(x = `Field of Study`, y = NormalizedProfessionals, fill = Group)) +
#   geom_bar(stat = "identity", position = "dodge") +
#   labs(x = "Common Skill", y = "Normalized Number of Professionals", title = "Comparison of Professionals with and without MC for top 10 skill differences") +
#   dais.base.theme() +
#   theme(panel.background=element_blank()) +
#   theme(axis.text.x = element_text(angle = 90, hjust = 0.5)) +
#   scale_fill_manual(values = c("#eb0072", "#6bbfae"))
#Top 5s
data_diff <- data_diff[order(Difference)]
top_5_diff_withoutmc <- head(data_diff, 5)
data_diff <- data_diff[order(-Difference)]
top_5_diff_mc <- head(data_diff, 5)
combined_data <- rbind(transform(top_5_diff_mc, Group = "With MC"),
transform(top_5_diff_withoutmc, Group = "Without MC"))
#Add STEM VS BHASE to fields of Study
combined_data_with_broad_field <- merge(combined_data, stemvsbhase,
by.x = "Field of Study",
by.y = "Fields of study",all.x = TRUE)
combined_data_with_broad_field <- combined_data_with_broad_field %>%
mutate(Study_Field_and_Broad = paste(`Field of Study`, "\n(", `Broad Field of Study`, ")", sep = ""))
# Graph with bars on the right and left
# ggplot(combined_data_with_broad_field, aes(x = `Difference`, y = `Study_Field_and_Broad`, fill = Group)) +
#   geom_bar(stat = "identity", position = position_dodge()) +
#   scale_fill_manual(values = c("With MC" = "#eb0072", "Without MC" = "#6bbfae")) +
#   labs(title = "Figure 1",
#        subtitle = "Comparison of % Differences in Fields of Study with and without MC",
#        x = "Difference", y = "Field of Study", fill = "Group",
#        caption = "Source: Linkedin Insights Data" ) +
#   dais.base.theme() +
#   theme(panel.background=element_blank(),
#         axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, family = "Replica-Regular")) +
#   geom_text(aes(label = percent(round(abs(`Difference`), 3))),
#             position = position_dodge(width = 0.9), vjust = 0.5, color = "black", family = "Replica-Regular")
combined_data_with_broad_field[, Difference := Difference * 100]
plot.column.dais(data = combined_data_with_broad_field,
x = Difference,
cat = Study_Field_and_Broad,
group.by = Group,
plot.title = "SE - Comparison of largest differences in Fields of Study between groups",
plot.fig.num = "Figure 8",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae"),
label = TRUE,
label.unit = "%",
language = "EN",
y.axis = "Field of Study",
legend.title = "Group",
caption = "Source: Linkedin Insights Data",
logo = FALSE,
export = FALSE)+coord_flip() +
scale_y_continuous(labels = function(x) paste0(round(x, 0), "%"))+
xlab("Field of Study")
ggsave("Graphs_Exports/Figure_8.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(combined_data_with_broad_field, "Graphs_data/Figure_8.csv", row.names = FALSE)
# Field of Study treemap
#
# treemap(data,
#         index = c("Group", "Field of Study"),
#         vSize = "NormalizedProfessionals",
#         title = "Comparison of Fields of Study",
#         palette = dais_palette,
#         #fontfamily.title = "Rooneysans",
#         #fontfamily.labels = "Rooneysans",
#         #fontfamily.legend = "Rooneysans",
#         fontsize.labels = 12)
######################################################################
##############################################################
###########################################################
# Within Group Comparisons ####
################################################
###################################################
#########################################################
##############################################################
######################################################################
############################################
######################################
################################
#########################
#######
# Stacked bars for
# 1.stem vs non-stem
# 2. Seniority
# 3. Ict vs non-ict
######## 1.stem vs non-stem
##### Data Scientists
data <- rbind(
data_scientists_withoutmc_fields_of_study[, .(Group = "Without MC", `Field of Study`, Professionals)],
`data_scientist_mc_Fields of Study`[, .(Group = "With MC", `Field of Study` = Fields.of.study, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_broad_field <- merge(data, stemvsbhase,
by.x = "Field of Study",
by.y = "Fields of study",all.x = TRUE)
combined_data_with_broad_field <- combined_data_with_broad_field %>%
mutate(Study_Field_and_Broad = paste(`Field of Study`, "\n(", `Broad Field of Study`, ")", sep = ""))
combined_data_with_broad_field <- na.omit(combined_data_with_broad_field)
grouped_data <- combined_data_with_broad_field[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(`Broad Field of Study`, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = `Broad Field of Study`,
plot.title = "DS - Normalized Professionals in STEM and BHASE",
plot.fig.num = "Figure 9",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae"),
label = TRUE,
y.axis = "Normalized Professionals",
legend.title = "Broad Field of Study",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_9.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_9.csv", row.names = FALSE)
##### Software Engineers
# create a new datatable that combines the data from both datatables
data <- rbind(
software_withoutmc_fields_of_study[, .(Group = "Without MC", `Field of Study`, Professionals)],
`software_mc_Fields of Study`[, .(Group = "With MC", `Field of Study` = Fields.of.study, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_broad_field <- merge(data, stemvsbhase,
by.x = "Field of Study",
by.y = "Fields of study",all.x = TRUE)
combined_data_with_broad_field <- combined_data_with_broad_field %>%
mutate(Study_Field_and_Broad = paste(`Field of Study`, "\n(", `Broad Field of Study`, ")", sep = ""))
combined_data_with_broad_field <- na.omit(combined_data_with_broad_field)
grouped_data <- combined_data_with_broad_field[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(`Broad Field of Study`, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = `Broad Field of Study`,
plot.title = "SE - Normalized Professionals in STEM and BHASE",
plot.fig.num = "Figure 10",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae"),
label = TRUE,
y.axis = "Normalized Professionals",
legend.title = "Broad Field of Study",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_10.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_10.csv", row.names = FALSE)
######################################################################
######## 2. Seniority
#### Data Scientists
# create a new datatable that combines the data from both datatables
data <- rbind(
data_scientists_withoutmc_common_titles[, .(Group = "Without MC", `Common Title`, Professionals)],
`data_scientist_mc_Common Titles`[, .(Group = "With MC", `Common Title` = Titles, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_seniority <- merge(data, seniority,
by.x = "Common Title",
by.y = "Titles",all.x = TRUE)
combined_data_with_seniority <- combined_data_with_seniority %>%
mutate(Title_and_Seniority = paste(`Common Title`, "\n(", `Seniority`, ")", sep = ""))
grouped_data <- combined_data_with_seniority[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(Seniority, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = Seniority,
plot.title = "DS - Normalized Professionals by Seniority",
plot.fig.num = "Figure 11",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = FALSE,
y.axis = "Normalized Professionals",
legend.title = "Job Title",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_11.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_11.csv", row.names = FALSE)
#####
# Find if the difference in Entry level between groups is stat. significant
group1 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Entry", NormalizedProfessionals]
group2 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Entry", NormalizedProfessionals]
# t-test
test_result <- t.test(group1, group2)
print(test_result)
# # Wilcoxon rank sum test
# test_result <- wilcox.test(group1, group2)
# print(test_result)
#### Software Engineers
# create a new datatable that combines the data from both datatables
data <- rbind(
software_withoutmc_common_titles[, .(Group = "Without MC", `Common Title`, Professionals)],
`software_mc_Common Titles`[, .(Group = "With MC", `Common Title` = Titles, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_seniority <- merge(data, seniority2,
by.x = "Common Title",
by.y = "Titles",all.x = TRUE)
combined_data_with_seniority <- combined_data_with_seniority %>%
mutate(Title_and_Seniority = paste(`Common Title`, "\n(", `Seniority`, ")", sep = ""))
grouped_data <- combined_data_with_seniority[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(Seniority, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = Seniority,
plot.title = "SE - Normalized Professionals by Seniority",
plot.fig.num = "Figure 12",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = FALSE,
y.axis = "Normalized Professionals",
legend.title = "Job Title",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_12.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_12.csv", row.names = FALSE)
#####
# Find if the difference in Entry level between groups is stat. significant
group1 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Entry", NormalizedProfessionals]
group2 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Entry", NormalizedProfessionals]
# t-test
test_result <- t.test(group1, group2)
print(test_result)
######################################################################
######## 3. Ict vs non-ict
#### Data Scientists
# create a new datatable that combines the data from both datatables
data <- rbind(
data_scientists_withoutmc_industries[, .(Group = "Without MC", Industry, Professionals)],
data_scientist_mc_Industries[, .(Group = "With MC", Industry, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#write.csv(data, file = "data.csv", row.names = FALSE)
# ict <- fread("ICT Sectors_DS.csv")
# ict[, Professionals := as.numeric(gsub(",", "", Professionals))]
# ict[, Professionals := as.numeric(Professionals)]
setkey(ict,Industry)
setkey(data,Industry)
combined_data_with_ict <- data[ict,on="Industry"]
combined_data_with_ict <- na.omit(combined_data_with_ict)
grouped_data <- combined_data_with_ict[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(ICT, Group)]
grouped_data[, ICT := ifelse(ICT == 0, "Non-ICT", "ICT")]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = ICT,
plot.title = "DS - Normalized Professionals in ICT",
plot.fig.num = "Figure 13",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = TRUE,
y.axis = "Normalized Professionals",
legend.title = "Industry",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_13.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_13.csv", row.names = FALSE)
# SOFTWARE
# create a new datatable that combines the data from both datatables
data <- rbind(
software_withoutmc_industries[, .(Group = "Without MC", Industry, Professionals)],
software_mc_Industries[, .(Group = "With MC", Industry, Professionals)]
)
# normalize the Professionals variable within each group
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
setkey(ict,Industry)
setkey(data,Industry)
combined_data_with_ict <- data[ict,on="Industry"]
combined_data_with_ict <- na.omit(combined_data_with_ict)
grouped_data <- combined_data_with_ict[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(ICT, Group)]
grouped_data[, ICT := ifelse(ICT == 0, "Non-ICT", "ICT")]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = ICT,
plot.title = "SE - Normalized Professionals in ICT",
plot.fig.num = "Figure 14",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = TRUE,
y.axis = "Normalized Professionals",
legend.title = "Industry",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_14.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_14.csv", row.names = FALSE)
######## 2. Seniority
#### Data Scientists
# create a new datatable that combines the data from both datatables
data <- rbind(
data_scientists_withoutmc_common_titles[, .(Group = "Without MC", `Common Title`, Professionals)],
`data_scientist_mc_Common Titles`[, .(Group = "With MC", `Common Title` = Titles, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_seniority <- merge(data, seniority,
by.x = "Common Title",
by.y = "Titles",all.x = TRUE)
combined_data_with_seniority <- combined_data_with_seniority %>%
mutate(Title_and_Seniority = paste(`Common Title`, "\n(", `Seniority`, ")", sep = ""))
grouped_data <- combined_data_with_seniority[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(Seniority, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = Seniority,
plot.title = "DS - Normalized Professionals by Seniority",
plot.fig.num = "Figure 11",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = FALSE,
y.axis = "Normalized Professionals",
legend.title = "Job Title",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_11.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_11.csv", row.names = FALSE)
#####
# Find if the difference in Entry level between groups is stat. significant
group1 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Entry", NormalizedProfessionals]
group2 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Entry", NormalizedProfessionals]
# t-test
test_result <- t.test(group1, group2)
print(test_result)
# # Wilcoxon rank sum test
# test_result <- wilcox.test(group1, group2)
# print(test_result)
#### Software Engineers
# create a new datatable that combines the data from both datatables
data <- rbind(
software_withoutmc_common_titles[, .(Group = "Without MC", `Common Title`, Professionals)],
`software_mc_Common Titles`[, .(Group = "With MC", `Common Title` = Titles, Professionals)]
)
# Convert Professionals to percentages among the same attribute
data[, NormalizedProfessionals := Professionals / sum(Professionals), by = Group]
#Add STEM VS BHASE
combined_data_with_seniority <- merge(data, seniority2,
by.x = "Common Title",
by.y = "Titles",all.x = TRUE)
combined_data_with_seniority <- combined_data_with_seniority %>%
mutate(Title_and_Seniority = paste(`Common Title`, "\n(", `Seniority`, ")", sep = ""))
grouped_data <- combined_data_with_seniority[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(Seniority, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = Seniority,
plot.title = "SE - Normalized Professionals by Seniority",
plot.fig.num = "Figure 12",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = FALSE,
y.axis = "Normalized Professionals",
legend.title = "Job Title",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_12.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_12.csv", row.names = FALSE)
#####
# Find if the difference in Entry level between groups is stat. significant
group1 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Entry", NormalizedProfessionals]
group2 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Entry", NormalizedProfessionals]
group3 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Senior", NormalizedProfessionals]
group4 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Senior", NormalizedProfessionals]
# t-test for Entry Level
test_result <- t.test(group1, group2)
print(test_result)
# t-test for Seniors
test_result <- t.test(group3, group4)
print(test_result)
View(combined_data_with_seniority)
grouped_data <- combined_data_with_seniority[, .(NormalizedProfessionals = sum(NormalizedProfessionals, na.rm = TRUE)), by = .(Seniority, Group)]
plot.column.dais(
data = grouped_data,
x = NormalizedProfessionals,
cat = Group,
group.by = Seniority,
plot.title = "SE - Normalized Professionals by Seniority",
plot.fig.num = "Figure 12",
order.bar = "No",
column.width = 0.6,
colours = c("#eb0072", "#6bbfae","#5bc2f4"),
label = FALSE,
y.axis = "Normalized Professionals",
legend.title = "Job Title",
caption = "Source: LinkedIn Data",
logo = FALSE,
export = FALSE,
stacked = TRUE
)
ggsave("Graphs_Exports/Figure_12.pdf", plot = last_plot(), width = 7.25, height = 7.25, units = "in")
write.csv(grouped_data, "Graphs_data/Figure_12.csv", row.names = FALSE)
#####
# Find if the difference in Entry level between groups is stat. significant
group1 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Entry", NormalizedProfessionals]
group2 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Entry", NormalizedProfessionals]
group3 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Mid", NormalizedProfessionals]
group4 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Mid", NormalizedProfessionals]
group5 <- combined_data_with_seniority[Group == "Without MC" & Seniority == "Senior", NormalizedProfessionals]
group6 <- combined_data_with_seniority[Group == "With MC" & Seniority == "Senior", NormalizedProfessionals]
# t-test for Entry Level
test_result <- t.test(group1, group2)
print(test_result)
# t-test for Mid
test_result <- t.test(group3, group4)
print(test_result)
# t-test for Seniors
test_result <- t.test(group5, group6)
print(test_result)
